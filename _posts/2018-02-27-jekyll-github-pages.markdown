---
layout: post
title: "jekyll + github pages 搭建个人博客"
date:   2018-02-27 21:32:40 +08:00
description: 萌新来讲讲在windows 10环境下，利用jekyll + github pages搭建blog的来龙去脉，包括工具的选择到安装到写自己的第一篇文章。
catalog:    true
tag:    
    - jekyll
---
开学第一天就被要求做一个blog，还是有点懵逼的，但是作为祖国曾经的花朵未来的栋梁，当然不能被这个困难打倒啦，于是花了一天的时间，终于捣鼓出来了。做完后再想想其实并没有什么难的地方，大概是第一次做不熟悉吧。下面就是我的步骤啦，希望可以帮到你：

> * 事前的选择
> * 安装ruby
> * 安装jekyll
> * blog的建立和本地运行
> * 利用github pages展示
>  * 创建个人仓库
>  * 将博客推送到该仓库中
> * 进阶：blog的个性化

### **一、事前的选择**

个人觉得，这是很重要的一个环节，于是在这里赘言一叙，目标明确的当然可以跳过。
github pages的好处不再赘述，需要了解的可以移步[**这里**](https://pages.github.com/)。利用github pages就可以建立起来一个blog，但是考虑到我们编辑blog的时候需要不停的尝试，反复提交到github pages上非常不方便（有时提交后等一会儿才会被展示出来），在本地安装一个blog生成工具，能够即时看到自己的修改，就显得很有必要。这时候，有两个选择：jekyll和hexo。两者大体上是类似的，也有一些区别。

* 安装上，hexo相对更简单一点，但是jekyll也并不复杂;
* github pages与jekyll更加契合;
* 可用的themes。个人的喜好不同，可以先自行浏览。（[jekyll tmemes](http://jekyllthemes.org/)，[hexo themes](https://hexo.io/themes/)）;

这里我选择的是 jekyll，有关具体的信息，可以从 [jekyll 官网](https://jekyllrb.com/docs/home/)了解。

### **二、安装ruby**

为什么要安装ruby？一种简单快捷的面向对象（面向对象程序设计）脚本语言，而jekyll是基于ruby的，需要运行在ruby提供的环境中。安装ruby的步骤如下：

> * **下载安装包**。在windows下，可以使用rubyinstaller来快捷的安装，这里是[下载地址](https://rubyinstaller.org/downloads/)。这里建议下载2.4.x以上的版本，因为在这些版本中，会自动下载需要的devkit、gems等东西。下载安装包的时候可能较慢。
> * **安装ruby**。找到下载的rubyinstaller程序，点击安装，按照向导的默认设置就好，记得确定勾选**Add Ruby executables to your PATH**选项。
> * **安装gems**。在ruby安装的最后一步，确认勾选提供的选项（名字记不清了，大体上是说进行DevKit的安装），会进入cmd，在给出的选项中选择第三个安装。这里会下载一些新的东西，可能会很慢（我的fail很多次，经历了较长一段时间才下载好），下载好后就很快了。
> * **测试是否安装好**。在cmd中分别输入 `ruby -v` 和 `gem -v` 来看看是否安装成功，看到版本号就说明成功。若是没看到，请检查ruby是否加入了系统环境变量中。如果不在，将ruby的bin文件夹的路径加入系统环境变量。

当然以上步骤可能不尽详细，毕竟不同的机器上安装可能会遇到不同的坑，但是大体过程不外如是，若是最后不成功，一定就是某个过程出现了问题。我觉得过程中最大的问题还是网络的问题，毕竟这些软件的 source 都在国外，如果出现下载不了的时候可以尝试科学上网。

### **三、安装jekyll**

有了之前安装的东西，接下来安装 jekyll 就比较简单了，执行以下命令：

    gem install jekyll
	
然后等待安装完毕就可以了。此时可以输入命令 `jekyll -v` ，若是出现版本号，则说明安装成功。若是在安装的过程中出现问题，可以根据 cmd 给出的提示进行操作或者是选择搜索（我在这一步并未遇到任何问题）。

### **四、blog的建立和本地运行**

打开cmd，cd 到一个空的文件夹，用来放置blog整个site。在 cmd 中输入以下命令：

    jekyll new blog
	
其中 blog 代表这个新建的blog的名字，可以替换成任意的符合规范的名字。这个命令会生成一个新的文件夹，名字就是你输入的名字，接下来 cd 进入这个文件夹，输入命令：

    jekyll serve
	
也可能运行时会报错，jekyll 可能会建议你使用以下命令来启动 blog：

    bundle exec jekyll serve
	
不出意外的话，这个新建的blog就会运行在本地的4000端口。进入浏览器输入 `127.0.0.1:4000` 就可以看到新建的blog，当然这个时候的blog什么内容也没有，需要你慢慢将网站丰富。至于如何丰富网站，卖个关子，先暂且不说。

### **五、利用github pages展示**

建立起一个 blog 后，我们当然希望能够被大家看到，而我们之前的步骤，只能在自己的电脑上看到自己的 blog ，这自然是极其不好的。要让别人看到自己 blog ，可以是自己动手在服务器上搭建一个网站，但是成本较高，极不方便，这里我选择的是利用 github pages 。下面就讲讲怎么打开这个服务：

#### **创建个人仓库**

这里，我假装你并没有 github 账号，如果有的话，你可以跳过相应的步骤。
> * **创建一个 github 账号**。这个进入[官网](https://github.com/)，按照提示进行就好。
> * **创建一个特殊的仓库**。点击右上角的 `+` ，选择 `new repository`，进入仓库的创建界面，在这里其它的按照默认的就可以，只有一点：仓库的名字必须是 `yourname.github.io` 这里的 `yourname` 就是你的 gihub 账号的 name 。github 会自动将这个仓库的内容作为 blog 的内容在 `https://yourname.github.io/` 上展示。

#### **将博客推送到该仓库中**

> * **git的安装**。要完成这一步，需要一个工具 git，若是还没有安装，可以按照[这个教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)先行学习一下 git 的安装和使用。
> * **将之前建立的仓库克隆下来**。进入一个你想放置 blog 的目录，使用 git bash 将之前将之前建立的仓库 clone 下来，这时会生成一个叫 `youname.github.io` 的 文件夹。然后用之前得到的本地 blog 中的内容替换掉 `youname.github.io` 文件夹中的内容（保留 `.git` 文件夹）。
> * **将 `youname.github.io` 文件夹 push 到仓库中**。

不出意外的话，在浏览器中输入 `https://yourname.github.io/` ，就可以看到这个 blog 了。注意，github pages 可能存在一些延迟，你可能需要等一会儿（有朋友等了十多分钟）才能看到你刚刚提交的东西。

### **六、进阶：blog的个性化**

实际上，完成了之前的步骤，虽说已经算是正式的搭建好了一个 blog，但是这是远远不够的。我们还需要为这个 blog 加上自己喜欢的主题以及不断添加内容。

#### **创建新文章**

jekyll的所有的文章都是放在 `_post` 文件夹下的，要创建一篇新的文章，就要在这个文件夹下建立一个新的文件，以 markdown 语法为例，这个新的文件名的格式如下:

    year-month-day-title.markdown

除了文件名，这个文件的内容开头也必须有一段 YAML 头信息，这个头部格式是固定的，下面是这一篇 blog 的格式：

{% highlight markdown %}
---
layout: post
title: "jekyll + github pages 搭建自己的个人博客"
date: 2018-02-27
description: 萌新来讲讲在windows 10环境下，利用jekyll + github pages搭建blog的来龙去脉，包括工具的选择到安装到写自己的第一篇文章。
---
{% endhighlight %}

关于 markdown 的基础的语法可以[在这里练习](https://www.markdowntutorial.com/)，学完基础的语法，就可以写一篇文章了。写好后，重启本地的 blog 服务器就可以看到自己的文章了。

#### **添加自己喜欢的主题**

如果你对前端比较感兴趣，你可以尝试着自己写一个漂亮的主题，当然这是比较耗时间的，你可以自行去了解 jekyll 的目录结构，以及每个文件夹的作用。具体的信息可以[去这里](https://jekyllrb.com/docs/structure/)了解。
这里推荐使用网上提供的各种主题的模板，只需要将自己喜欢的模板下载下来替换 `yourname.github.io` 文件夹中内容，并且将新的内容 push 仓库中即可。下载的具体流程较为简单：你可以选择将看中的模板的 github 项目先 fork 到你自己的账号上，再 clone 下来；也可以直接下载（此时就是一个压缩包），再解压即可。

**注：**在用别人的模板的模板时，可能存在 push 到 github 上后，访问 blog 时图片、网页样式无法显示的情况，这是因为对图片和  css 文件的引用路径不正确造成的。此时可以尝试注释掉 `_config.yml` 文件中的 `baseurl`，当然也可能是需要修改而不是直接注释掉，这个需要视具体情况而定（看你的 blog 是否放在更目录中）。


以上就是搭建一个 blog 的基本的步骤，但是这只是一个开始，绝对不是结束。无论你选择哪一种方式得到自己的主题，都需要在使用中慢慢去修改主题，不断写出新的文章。此外，在以上的过程中，你或许会碰到其它的奇奇怪怪的问题，会进入不同的坑，此时莫要心慌，好好利用百度、谷歌等工具，问题自会迎刃而解。
